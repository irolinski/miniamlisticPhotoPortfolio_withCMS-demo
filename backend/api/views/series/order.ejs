<% layout('layouts/boilerplate') %>

<div class="container mx-auto col-10 px-12">
  <div class="mt-5">
    <div class="my-3 py-5 ">
      <h2>Series:</h2>
      <div class="d-flex my-5 mx-5 justify-content-end">
      <button type="submit" class="btn btn-outline-primary float-end" form="order-form" >Set order</button>
      <form action="/series/order?_method=PUT" id="order-form" method="POST" novalidate>
        <input name="orderedIds" type="hidden" id="order-input" readonly >
      </form>
      </div>
      <ul class="row justify-content-center" id="series-order-list">
        <% allSeries.map((s) => { %>
        <li
          class="card py-5 px-4 m-4"
          style="width: 18rem"
        >
        <input type="hidden" id="series-id" value="<%=s.id%>" readonly />
          <img class="card-img-top mt-3" draggable="false" src="<%=s.cover%>" />
          <div class="card-body text-align-center">
            <h5 class="card-title text-center"><%=s.name%></h5>
            <h6>id: <%=s.id%></h4>
            <div class="row justify-content-center">
              <button type="button" class="btn btn-outline-dark drag-btn-normal">
                Drag
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  fill="currentColor"
                  class="bi bi-grip-vertical"
                  viewBox="0 0 16 16"
                >
                  <path
                    d="M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0"
                  />
                </svg>
              </button>
              <button type="button" class="btn btn-outline-dark drag-btn-touchscreen">
                Touch and hold <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-fingerprint" viewBox="0 0 16 16">
                  <path d="M8.06 6.5a.5.5 0 0 1 .5.5v.776a11.5 11.5 0 0 1-.552 3.519l-1.331 4.14a.5.5 0 0 1-.952-.305l1.33-4.141a10.5 10.5 0 0 0 .504-3.213V7a.5.5 0 0 1 .5-.5Z"/>
                  <path d="M6.06 7a2 2 0 1 1 4 0 .5.5 0 1 1-1 0 1 1 0 1 0-2 0v.332q0 .613-.066 1.221A.5.5 0 0 1 6 8.447q.06-.555.06-1.115zm3.509 1a.5.5 0 0 1 .487.513 11.5 11.5 0 0 1-.587 3.339l-1.266 3.8a.5.5 0 0 1-.949-.317l1.267-3.8a10.5 10.5 0 0 0 .535-3.048A.5.5 0 0 1 9.569 8m-3.356 2.115a.5.5 0 0 1 .33.626L5.24 14.939a.5.5 0 1 1-.955-.296l1.303-4.199a.5.5 0 0 1 .625-.329"/>
                  <path d="M4.759 5.833A3.501 3.501 0 0 1 11.559 7a.5.5 0 0 1-1 0 2.5 2.5 0 0 0-4.857-.833.5.5 0 1 1-.943-.334m.3 1.67a.5.5 0 0 1 .449.546 10.7 10.7 0 0 1-.4 2.031l-1.222 4.072a.5.5 0 1 1-.958-.287L4.15 9.793a9.7 9.7 0 0 0 .363-1.842.5.5 0 0 1 .546-.449Zm6 .647a.5.5 0 0 1 .5.5c0 1.28-.213 2.552-.632 3.762l-1.09 3.145a.5.5 0 0 1-.944-.327l1.089-3.145c.382-1.105.578-2.266.578-3.435a.5.5 0 0 1 .5-.5Z"/>
                  <path d="M3.902 4.222a5 5 0 0 1 5.202-2.113.5.5 0 0 1-.208.979 4 4 0 0 0-4.163 1.69.5.5 0 0 1-.831-.556m6.72-.955a.5.5 0 0 1 .705-.052A4.99 4.99 0 0 1 13.059 7v1.5a.5.5 0 1 1-1 0V7a3.99 3.99 0 0 0-1.386-3.028.5.5 0 0 1-.051-.705M3.68 5.842a.5.5 0 0 1 .422.568q-.044.289-.044.59c0 .71-.1 1.417-.298 2.1l-1.14 3.923a.5.5 0 1 1-.96-.279L2.8 8.821A6.5 6.5 0 0 0 3.058 7q0-.375.054-.736a.5.5 0 0 1 .568-.422m8.882 3.66a.5.5 0 0 1 .456.54c-.084 1-.298 1.986-.64 2.934l-.744 2.068a.5.5 0 0 1-.941-.338l.745-2.07a10.5 10.5 0 0 0 .584-2.678.5.5 0 0 1 .54-.456"/>
                  <path d="M4.81 1.37A6.5 6.5 0 0 1 14.56 7a.5.5 0 1 1-1 0 5.5 5.5 0 0 0-8.25-4.765.5.5 0 0 1-.5-.865m-.89 1.257a.5.5 0 0 1 .04.706A5.48 5.48 0 0 0 2.56 7a.5.5 0 0 1-1 0c0-1.664.626-3.184 1.655-4.333a.5.5 0 0 1 .706-.04ZM1.915 8.02a.5.5 0 0 1 .346.616l-.779 2.767a.5.5 0 1 1-.962-.27l.778-2.767a.5.5 0 0 1 .617-.346m12.15.481a.5.5 0 0 1 .49.51c-.03 1.499-.161 3.025-.727 4.533l-.07.187a.5.5 0 0 1-.936-.351l.07-.187c.506-1.35.634-2.74.663-4.202a.5.5 0 0 1 .51-.49"/>
                </svg>
              </button>
            </div>
          </div>
        </li>
        <% }) %>
      </ul>
    </div>
  </div>
</div>

<script>

// let seriesIds = []
const orderInput = document.getElementById("order-input");
console.log(orderInput);

const getIdsInOrder = () => {
    let seriesIds = [];
  let seriesInputs = document.querySelectorAll("#series-order-list li #series-id");
  seriesInputs.forEach((s) => {
    seriesIds.push(s.value);
  })
  console.log( seriesIds)
  orderInput.value = seriesIds;

}

window.addEventListener("load", () => {

    getIdsInOrder();
    
  // GET ALL LIST ITEMS
  const listedSeries = document.querySelectorAll("#series-order-list li");
 
  // FLAG FOR "CURRENT ITEM BEING DRAGGED"
  let dragged;
 
  // DRAG-AND-DROP MECHANISM
  for (let i of listedSeries) {
    // LIST ITEM IS DRAGGABLE
    i.draggable = true;
 
    // ON DRAG START - SET FLAG & DATA TRANSFER
    i.ondragstart = e => {
      dragged = i;
      e.dataTransfer.dropEffect = "move";
      e.dataTransfer.effectAllowed = "move";
      e.dataTransfer.setData("text/html", i.innerHTML);
    };
 
    // ON DRAG OVER - NECESSARY PREVENT DEFAULT FOR DROP TO WORK
    i.ondragover = e => e.preventDefault();
 
    // ON DROP - "SWAP POSITION"
    i.ondrop = e => {
      e.preventDefault();
      if (dragged != i) {
        dragged.innerHTML = i.innerHTML;
        i.innerHTML = e.dataTransfer.getData("text/html");
        getIdsInOrder();
      }
    };
 
    // STYLING
    i.ondragenter = () => i.parentElement.classList.add("active");
    i.ondragleave = () => i.parentElement.classList.remove("active");
    i.ondragend = () => {
      for (let el of listedSeries) { el.classList.remove("active"); }
    };
  }


});
</script>